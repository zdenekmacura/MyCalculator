<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="CalculatorExampleMain">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar"/>
        <pathelement location="../../eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="CalculatorExampleMain.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="CalculatorExampleTest.testRunCreateCalculatorWithNotExistingFile">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testRunCreateCalculatorWithNoArgument">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testCreateCalculatorExampleTestObject">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testResultWhenMoreOperationIsPresent">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testResultWhenOneAddOperationIsPresent">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExample (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testResultWhenOneAddAndOneMultiplyOperationIsPresent">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testMain">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testErrorMessageWhenFileHasNoApplyInstruction">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleMain">
        <java classname="CalculatorExampleMain" failonerror="true" fork="yes">
            <!-- <arg line="/tmp/testfile"/> -->
            <classpath refid="CalculatorExampleMain.classpath"/>
        </java>
    </target>
    <target name="CalculatorExampleTest.testLoadOperationsWithApplyNumber">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testOperationListAfterLoadOperationsIfAddOperationIsPresent">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testOperationListAfterLoadOperationsIfMultiplyOperationIsPresent">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testPerformeOperationsWithAdd">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testPerformeOperationsWithMultiply">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="CalculatorExampleTest.testPerformeOperationsWithMultiplyAndAdd">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="CalculatorExampleTest" todir="${junit.output.dir}"/>
            <classpath refid="CalculatorExampleMain.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
